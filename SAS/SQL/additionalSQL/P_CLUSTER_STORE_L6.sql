--------------------------------------------------------
--  DDL for Procedure P_CLUSTER_STORE_L6
--------------------------------------------------------
set define off;

  CREATE OR REPLACE PROCEDURE "MAXDATA"."P_CLUSTER_STORE_L6" 
AS
  -- procedure to create Corporate Store Financials.
  -- 08/09/99 No level 6
  -- 07/22/99 delete the new store built if validation fails.
  -- 07/22/99 error messages changed due to above change.
  -- has aggregation fields
  -- logic changed to go to next cluster when previous fails validation -- 7/15 rg
  -- assumption
  -- column num_user6 = 1 in clustermaster table shows the clusters for
  -- which the summary is done
  -- column num_user1 = 2 in lv1loc shows its a corporate store company.
  t_lv4loc_id  		number(10) ;
  t_lv5loc_id  		number(10) ;
  ctr          		number(10) ;
  t_lv1loc_id         	number(10) ;
  t_last_update  	      date ;
  t_lv6loc_id		number(10) ;
  t_lv4finc_period 	number(10) ;
  t_mmax_period   	number(10) ;
  corp_lv5loc_id 	      number(10) ;
  corp_lv6loc_id 	      number(10) ;
  do_cluster           	integer;
  temp_period_cycle 	integer;
  rows_returned        	integer;
  l_periods_to_roll	number(4) ;
  l_period_type         varchar(35);
  periods_in_cycle 	number(2,0);
  l_current_period      number(6) ;
  l_current_cycle       number(6) ;
  l_cycle_roll_from	number(6) ;
  l_period_roll_from    number(6) ;
  Begin
  -- delete existing log entries.
  delete from maxdata.corp_store_log where log_id = 'p_cluster_store_l6';
  ins_corp_store_log ('p_cluster_store_l6','info','Deleted earlier log entries',
                      null,null,null) ;
  -- to avoid doing all the calcs if it is up to date.
  select distinct last_update
  into   t_last_update
  from   lv1finc
  where  cycle||lpad(period,2,'0') =
         ( select max(cycle||lpad(period,2,'0'))
           from lv1finc ) ;
  ins_corp_store_log ('p_cluster_store_l6','info','Started Corporate Store Process',
                      null,null,null) ;
  --Check if Cluster Store Company exists.
  Select count(*)
  into   ctr
  from   lv1loc
  where  num_user1 = 2;
  If ctr = 0 then
     ins_corp_store_log  ('p_cluster_store_l6','info','Corporate Store company missing. Process Terminated.', null,null,null);
     RETURN;
  ELSIF (ctr > 1) then
     ins_corp_store_log  ('p_cluster_store_l6','info','More than one Corporate Store Company.Process Terminated.', null,null, null );
     RETURN;
  else
     select lv1loc_id into t_lv1loc_id  from lv1loc where  num_user1 = 2;
  end if;
  --Check if Model Store exists.
  Select count(*)
  into   ctr
  from   maxdata.lv4loc
  where  lv4loc.lv4loc_userid = 'Model Store Layout'
  and    lv1loc_id = t_lv1loc_id  ;
  If ctr = 0 then
     ins_corp_store_log  ('p_cluster_store_l6','info','Model Store missing. Process Terminated.',
                          null,null,null) ;
     RETURN;
  elsif (ctr > 1) then
     ins_corp_store_log  ('p_cluster_store_l6','info','More than one Model Store exists. Process Terminated.',
                          null,null,null );
     RETURN;
  end if;
--  begin the cluster analysis.
Rows_returned := 0;
Begin
For C1 in (
	select date_user7,
	 	 cluster_userid,
	 	 cluster_master_id
	from   clustermaster
      where  num_user6 = 1 ) loop
      Rows_returned := 1;
-- CLUSTERMASTER LOOP
-- Check if record exists in lv4loc with loc_userid = clusteruserid.
      if C1.date_user7 is null or (C1.date_user7 < t_last_update) then
<<cluster_userid>>
      Begin
           	select lv4loc_id
      	into   t_lv4loc_id
      	from   maxdata.lv4loc
      	where  upper(lv4loc.lv4loc_userid) = upper(C1.cluster_userid)
            and    lv4loc.lv1loc_id = t_lv1loc_id;
      exception
      when NO_DATA_FOUND then
             -- copy the Model Store Layout
             maxapp.f_get_seq(4,2,t_lv4loc_id) ;
        insert into maxdata.lv4loc
        ( lv4loc_id,
          lv4loc_userid,
          lv4mast_id,
          lv3loc_id,
          lv2loc_id,
          lv1loc_id,
          version_id,
          placed,
          x_coord,
          y_coord,
          z_coord,
          height,
          width,
          depth   )
        select
          t_lv4loc_id,
          C1.cluster_userid,
          lv4mast_id,
          lv3loc_id,
          lv2loc_id,
          lv1loc_id,
          lv4loc_id,
          1,
          x_coord,
          y_coord,
          z_coord,
          height,
          width,
          depth
 from     maxdata.lv4loc
 where    upper(lv4loc_userid) = 'MODEL STORE LAYOUT' ;
 --       drop table temp_lv4loc;
-- also copy the lv5loc records for this Model Store Layout
        For C2 in (   select
		lv5loc_userid,
		lv5mast_id,
		lv3loc_id,
		lv2loc_id,
		lv1loc_id,
		lv5loc_id,
		x_coord,
		y_coord,
		z_coord,
		height,
		width,
		depth
        from lv5loc
        where lv4loc_id =
                     ( select lv4loc_id
                       from maxdata.lv4loc
                       where upper(lv4loc_userid) = 'MODEL STORE LAYOUT'
                       and   lv4loc.lv1loc_id = t_lv1loc_id))  loop
        maxapp.f_get_seq(5,2,t_lv5loc_id );
        insert into lv5loc
          ( lv5loc_id,
            lv5loc_userid,
            lv5mast_id,
            lv4loc_id,
            lv3loc_id,
            lv2loc_id,
            lv1loc_id,
            version_id,
            placed,
            x_coord,
            y_coord,
            z_coord,
            height,
            width,
            depth  )
          values
           (t_lv5loc_id,
            c2.lv5loc_userid,
            c2.lv5mast_id,
            t_lv4loc_id,
            c2.lv3loc_id,
            c2.lv2loc_id,
            c2.lv1loc_id,
            c2.lv5loc_id,
            1,
            c2.x_coord,
            c2.y_coord,
            c2.z_coord,
            c2.height,
            c2.width,
            c2.depth );
       END loop ;
       commit;
     end;
--End of creating lv4loc and lv5loc records for this cluster.
-- Begin validation.
<<lv5mast>>
do_cluster := 0;
FOR  C4 in
       (Select distinct lv5mast_id
       from   lv5loc
       where  lv5loc.lv4loc_id in (select lv4loc_id from clusterdetail
                                   where  clusterdetail.cluster_master_id
                                          = c1.cluster_master_id))
     loop
       Select count(*) into ctr
       from   lv5loc
       where  lv5loc.lv5mast_id = C4.lv5mast_id
       and    lv5loc.lv4loc_id =  t_lv4loc_id ;
       If (ctr = 0) then
         ins_corp_store_log ('p_cluster_store_l6','error', 'For cluster ' ||
                             c1.cluster_userid ||' Model Store does not have a record for lv5mast_id'|| C4.lv5mast_id, null,null,null) ;
         do_cluster := 1;
       elsif (ctr > 1) then
         ins_corp_store_log ('p_cluster_store_l6','error', 'For cluster ' || c1.cluster_userid ||
                             ' Model Store has duplicates for lv5mast_id: '||C4.lv5mast_id|| ', rows found: ' ||ctr,null,null,null) ;
         do_cluster := 1;
       end if;
     end loop;
If do_cluster = 1 then
   -- since validation failed, delete the records just created.
   delete from lv5loc where lv5loc.lv4loc_id = t_lv4loc_id;
   delete from lv4loc where lv4loc.lv4loc_id = t_lv4loc_id;
   goto end_current_cluster ;
   -- Exit the clustermaster loop and go to the next cluster.
end if;
-- Creating Finc records:
-- Find the period for which to create the finc records:
   ins_corp_store_log ('p_cluster_store_l6','info','Started building finc records for cluster '||c1.cluster_userid ,
                     null,null,null) ;
   Begin
     temp_period_cycle := 0;
    Select current_cycle||lpad(current_period,2,'0')
    into   t_mmax_period
    from   maxapp.mmax_config;
    Select max(cycle||lpad(period,2,'0'))
    into   t_lv4finc_period
    from   maxdata.lv4finc
    where  lv4loc_id = t_lv4loc_id;
-- If cluster store max period,cycle for finc is < active company current period, cycle
-- then create finc for difference in periods.
    If t_lv4finc_period is null then
           Insert into temp_period
           select   distinct period, cycle
           from     maxdata.lv4finc
           where    lv4loc_id in (select lv4loc_id
           from     clusterdetail where cluster_master_id = c1.cluster_master_id);
    elsif  t_lv4finc_period < t_mmax_period then
           Insert into temp_period
           select   period_id    period,
	              cycle_id     cycle
	     from  	  maxapp.period_lkup
           where    cycle_id||lpad(period_id,2,'0') > t_lv4finc_period
           and      cycle_id||lpad(period_id,2,'0') = t_mmax_period
           and      period_lkup.period_type = (select period_type from maxapp.mmax_config);
    else
          temp_period_cycle := 1;
          ins_corp_store_log ('p_cluster_store_l6','info','Finc up to date for cluster '||c1.cluster_userid ||'.Hence no records created now.',null,null,null) ;
    end if;
    if temp_period_cycle = 1 then
       goto end_current_cluster ;
       -- exit clustermaster loop. Go to next cluster. This shdnt happen because
       -- of the 1st date check.
    end if;
--for each period
For c6 in (select period, cycle from temp_period) loop
  -- building lv5finc for the particular period.
  FOR  c8 in
	(SELECT distinct lv5mast_id
	FROM   clusterdetail, lv5loc
      WHERE  clusterdetail.lv4loc_id = lv5loc.lv4loc_id
      AND    clusterdetail.cluster_master_id = c1.cluster_master_id) loop
      SELECT lv5loc_id
      INTO   corp_lv5loc_id
      FROM   lv5loc
      WHERE  lv5loc.lv5mast_id = c8.lv5mast_id
      AND    lv5loc.lv4loc_id = t_lv4loc_id     ;
 -- delete existing records if created during a previous crash, not rolled back
    delete from maxdata.lv5finc
    where  lv5finc.lv5loc_id = corp_lv5loc_id
    and    lv5finc.period = c6.period
    and    lv5finc.cycle = c6.cycle;
    /* Insert */
      Insert into maxdata.lv5finc
            (last_update,
    		changed_by_batch,
    		period,
   		days_in_period,
    		cycle,
    		version_id,
    		lv5loc_id,
    		cubic_meters,
    		dsp_sqmeters,
    		flr_sqmeters,
    		linear_meters,
    		used_cubic_meters,
    		used_dsp_sqmeters,
   		used_linear_meters,
    		proj_sales,
 		proj_gp,
  		loss_sales,
    		loss_gp,
    		days_supply,
    		dpp_dollar,
    		dpp_item,
    		cost_of_invent,
    		dir_cost_of_sales,
    		indir_cost_of_sale,
    		gm_roii,
    		posit_sales,
    		posit_mvmt,
    		posit_norm_mvmt,
    		count_inc_in_avg,
    		total_caps,
    		total_items,
    		total_units,
    		vat,
    		supp_total_sales,
    		supp_cost_of_sales,
    		supp_posit_mvmt,
    		supplier_norm_mvmt,
    		num_user1,
    		num_user2,
    		num_user3,
  		num_user4,
    		num_user5,
		num_user6,
    		oh_qty,
    		oh_cost,
    		oh_retail,
    		pog_retail,
/* Added columns on 06/22/1999  Suresh */
		ALLOC_CUBIC_METERS,
		ALLOC_DSP_SQMETERS,
		ALLOC_FLR_SQMETERS,
		ALLOC_LINEAR_METER,
		POSIT_MVMT_REG ,
		POSIT_SALES_REG,
		POSIT_COST_REG ,
		POSIT_MVMT_PROMO ,
		POSIT_SALES_PROMO,
		POSIT_COST_PROMO ,
		POSIT_MVMT_CLRNC ,
		POSIT_SALES_CLRNC,
		POSIT_COST_CLRNC ,
		POSIT_MVMT_RETN,
		POSIT_SALES_RETN ,
		POSIT_COST_RETN,
		INVENTORY_ITEMS,
		INVENTORY_RETAIL ,
		INVENTORY_COST ,
		RECEIVED_ITEMS ,
		RECEIVED_RETAIL,
		RECEIVED_COST,
		TOTAL_ITEMS_RETAIL ,
		TOTAL_ITEMS_COST ,
		MIN_PRES_ITEMS ,
		MIN_PRES_RETAIL,
		MIN_PRES_COST,
/* Added dmgr extensions columns on 01/24/2001 by Maurice Ndansi */
                posit_indcost_reg,
	        posit_indcost_promo,
	 	posit_indcost_clrnc,
	 	posit_indcost_retn,
         	Sales_retail_5,
         	Sales_Cost_5,
         	Sales_Items_5,
         	Sales_indcost_5,
         	Sales_retail_6,
         	Sales_Cost_6,
         	Sales_Items_6,
         	Sales_indcost_6,
         	Sales_retail_7,
         	Sales_Cost_7,
         	Sales_Items_7,
         	Sales_indcost_7,
         	Sales_retail_8,
         	Sales_Cost_8,
         	Sales_Items_8,
         	Sales_indcost_8,
         	Sales_retail_9,
         	Sales_Cost_9,
         	Sales_Items_9,
         	Sales_indcost_9,
         	Sales_retail_10,
         	Sales_Cost_10,
         	Sales_Items_10,
         	Sales_indcost_10,
         	Inv_retail_1,
         	Inv_Cost_1,
         	Inv_Items_1,
         	Inv_indcost_1,
         	Inv_retail_2,
         	Inv_Cost_2,
         	Inv_Items_2,
         	Inv_indcost_2,
         	Inv_retail_3,
         	Inv_Cost_3,
         	Inv_Items_3,
         	Inv_indcost_3,
         	Inv_retail_4,
         	Inv_Cost_4,
         	Inv_Items_4,
         	Inv_indcost_4,
         	Inv_retail_5,
         	Inv_Cost_5,
         	Inv_Items_5,
         	Inv_indcost_5,
         	Inv_retail_6,
         	Inv_Cost_6,
         	Inv_Items_6,
         	Inv_indcost_6,
         	Inv_retail_7,
         	Inv_Cost_7,
         	Inv_Items_7,
         	Inv_indcost_7,
         	Inv_retail_8,
         	Inv_Cost_8,
         	Inv_Items_8,
         	Inv_indcost_8,
         	Inv_retail_9,
         	Inv_Cost_9,
         	Inv_Items_9,
         	Inv_indcost_9,
         	Inv_retail_10,
         	Inv_Cost_10,
         	Inv_Items_10,
         	Inv_indcost_10,
         	Sum_user1,
         	Sum_user2,
         	Sum_user3,
         	Sum_user4,
         	Sum_user5,
         	Avg_user1,
         	Avg_user2,
         	Avg_user3,
         	Avg_user4,
         	Avg_user5,
           inventory_indcost,
         oh_indcost,
         received_indcost,
         active_loc_flag
)
      SELECT  sysdate,
     		1,
      	lv5finc.period,
      	sum(lv5finc.days_in_period),
      	lv5finc.cycle,
      	1,
      	corp_lv5loc_id,
      	sum(lv5finc.cubic_meters),
      	sum(lv5finc.dsp_sqmeters),
    		sum(lv5finc.flr_sqmeters),
    		sum(lv5finc.linear_meters),
      	sum(lv5finc.used_cubic_meters),
      	sum(lv5finc.used_dsp_sqmeters),
      	sum(lv5finc.used_linear_meters),
		sum(lv5finc.proj_sales),
      	sum(lv5finc.proj_gp),
      	sum(lv5finc.loss_sales),
      	sum(lv5finc.loss_gp),
      	1,
      	sum(lv5finc.dpp_dollar),
      	sum(lv5finc.dpp_item),
      	sum(cost_of_invent),
      	sum(dir_cost_of_sales),
      	sum(indir_cost_of_sale),
      	sum(gm_roii),
      	sum(lv5finc.posit_sales),
      	sum(lv5finc.posit_mvmt),
      	sum(lv5finc.posit_norm_mvmt),
      	sum(lv5finc.count_inc_in_avg),
      	sum(lv5finc.total_caps),
 	      sum(lv5finc.total_items),
      	sum(lv5finc.total_units),
      	sum(lv5finc.vat),
      	sum(supp_total_sales),
      	sum(supp_cost_of_sales),
      	sum(lv5finc.supp_posit_mvmt),
      	sum(lv5finc.supplier_norm_mvmt),
      	sum(lv5finc.num_user1),
      	sum(lv5finc.num_user2),
      	sum(lv5finc.num_user3),
      	sum(lv5finc.num_user4),
      	sum(lv5finc.num_user5),
      	sum(lv5finc.num_user6),
      	sum(lv5finc.oh_qty),
      	sum(lv5finc.oh_cost),
      	sum(lv5finc.oh_retail),
      	sum(lv5finc.pog_retail),
		sum(lv5finc.ALLOC_CUBIC_METERS),
		sum(lv5finc.ALLOC_DSP_SQMETERS),
		sum(lv5finc.ALLOC_FLR_SQMETERS),
		sum(lv5finc.ALLOC_LINEAR_METER),
		sum(lv5finc.POSIT_MVMT_REG ),
		sum(lv5finc.POSIT_SALES_REG),
		sum(lv5finc.POSIT_COST_REG ),
		sum(lv5finc.POSIT_MVMT_PROMO ),
		sum(lv5finc.POSIT_SALES_PROMO),
		sum(lv5finc.POSIT_COST_PROMO ),
		sum(lv5finc.POSIT_MVMT_CLRNC ),
		sum(lv5finc.POSIT_SALES_CLRNC),
		sum(lv5finc.POSIT_COST_CLRNC) ,
		sum(lv5finc.POSIT_MVMT_RETN),
		sum(lv5finc.POSIT_SALES_RETN) ,
		sum(lv5finc.POSIT_COST_RETN),
		sum(lv5finc.INVENTORY_ITEMS),
		sum(lv5finc.INVENTORY_RETAIL) ,
		sum(lv5finc.INVENTORY_COST) ,
		sum(lv5finc.RECEIVED_ITEMS) ,
		sum(lv5finc.RECEIVED_RETAIL),
		sum(lv5finc.RECEIVED_COST),
		sum(lv5finc.TOTAL_ITEMS_RETAIL) ,
		sum(lv5finc.TOTAL_ITEMS_COST) ,
		sum(lv5finc.MIN_PRES_ITEMS ),
		sum(lv5finc.MIN_PRES_RETAIL),
		sum(lv5finc.MIN_PRES_COST),
		sum(lv5finc.posit_indcost_reg),
	 	sum(lv5finc.posit_indcost_promo),
	 	sum(lv5finc.posit_indcost_clrnc),
	 	sum(lv5finc.posit_indcost_retn),
         	sum(lv5finc.Sales_retail_5),
         	sum(lv5finc.Sales_Cost_5),
         	sum(lv5finc.Sales_Items_5),
         	sum(lv5finc.Sales_Indcost_5),
         	sum(lv5finc.Sales_retail_6),
         	sum(lv5finc.Sales_Cost_6),
         	sum(lv5finc.Sales_Items_6),
         	sum(lv5finc.Sales_Indcost_6),
         	sum(lv5finc.Sales_retail_7),
         	sum(lv5finc.Sales_Cost_7),
         	sum(lv5finc.Sales_Items_7),
         	sum(lv5finc.Sales_Indcost_7),
         	sum(lv5finc.Sales_retail_8),
         	sum(lv5finc.Sales_Cost_8),
         	sum(lv5finc.Sales_Items_8),
         	sum(lv5finc.Sales_Indcost_8),
         	sum(lv5finc.Sales_retail_9),
         	sum(lv5finc.Sales_Cost_9),
         	sum(lv5finc.Sales_Items_9),
         	sum(lv5finc.Sales_Indcost_9),
         	sum(lv5finc.Sales_retail_10),
         	sum(lv5finc.Sales_Cost_10),
         	sum(lv5finc.Sales_Items_10),
         	sum(lv5finc.Sales_Indcost_10),
         	sum(lv5finc.Inv_retail_1),
         	sum(lv5finc.Inv_Cost_1),
         	sum(lv5finc.Inv_Items_1),
         	sum(lv5finc.Inv_Indcost_1),
         	sum(lv5finc.Inv_retail_2),
         	sum(lv5finc.Inv_Cost_2),
         	sum(lv5finc.Inv_Items_2),
         	sum(lv5finc.Inv_Indcost_2),
         	sum(lv5finc.Inv_retail_3),
         	sum(lv5finc.Inv_Cost_3),
         	sum(lv5finc.Inv_Items_3),
         	sum(lv5finc.Inv_Indcost_3),
         	sum(lv5finc.Inv_retail_4),
         	sum(lv5finc.Inv_Cost_4),
         	sum(lv5finc.Inv_Items_4),
         	sum(lv5finc.Inv_Indcost_4),
         	sum(lv5finc.Inv_retail_5),
         	sum(lv5finc.Inv_Cost_5),
         	sum(lv5finc.Inv_Items_5),
         	sum(lv5finc.Inv_Indcost_5),
         	sum(lv5finc.Inv_retail_6),
         	sum(lv5finc.Inv_Cost_6),
         	sum(lv5finc.Inv_Items_6),
         	sum(lv5finc.Inv_Indcost_6),
         	sum(lv5finc.Inv_retail_7),
         	sum(lv5finc.Inv_Cost_7),
         	sum(lv5finc.Inv_Items_7),
         	sum(lv5finc.Inv_Indcost_7),
         	sum(lv5finc.Inv_retail_8),
         	sum(lv5finc.Inv_Cost_8),
         	sum(lv5finc.Inv_Items_8),
         	sum(lv5finc.Inv_Indcost_8),
         	sum(lv5finc.Inv_retail_9),
         	sum(lv5finc.Inv_Cost_9),
         	sum(lv5finc.Inv_Items_9),
         	sum(lv5finc.Inv_Indcost_9),
         	sum(lv5finc.Inv_retail_10),
         	sum(lv5finc.Inv_Cost_10),
         	sum(lv5finc.Inv_Items_10),
         	sum(lv5finc.Inv_Indcost_10),
         	sum(lv5finc.Sum_user1),
         	sum(lv5finc.Sum_user2),
         	sum(lv5finc.Sum_user3),
         	sum(lv5finc.Sum_user4),
         	sum(lv5finc.Sum_user5),
         	avg(lv5finc.Avg_user1),
         	avg(lv5finc.Avg_user2),
         	avg(lv5finc.Avg_user3),
         	avg(lv5finc.Avg_user4),
         	avg(lv5finc.Avg_user5),
			sum(lv5finc.inventory_indcost),
            sum(lv5finc.oh_indcost),
            sum(lv5finc.received_indcost),
            sum(lv5finc.active_loc_flag)
	FROM  lv5finc,lv5loc, clusterdetail
	WHERE lv5finc.lv5loc_id = lv5loc.lv5loc_id and
     		lv5loc.lv5mast_id = c8.lv5mast_id and
            lv5loc.lv4loc_id = clusterdetail.lv4loc_id and
            clusterdetail.cluster_master_id = c1.cluster_master_id and
      	lv5finc.period = c6.period and
      	lv5finc.cycle = c6.cycle
	GROUP BY lv5finc.cycle, lv5finc.period ;
 END loop;
 -- lv5finc end loop.
 -- building lv4finc for the paricular period.
	INSERT into maxdata.lv4finc(last_update,
    		changed_by_batch,
    		period,
    		days_in_period,
    		cycle,
    		version_id,
    		lv4loc_id,
    		cubic_meters,
    		dsp_sqmeters,
    		flr_sqmeters,
    		linear_meters,
    		used_cubic_meters,
    		used_dsp_sqmeters,
    		used_linear_meters,
    		proj_sales,
    		proj_gp,
    		loss_sales,
    		loss_gp,
    		days_supply,
    		dpp_dollar,
    		dpp_item,
    		cost_of_invent,
    		dir_cost_of_sales,
    		indir_cost_of_sale,
    		gm_roii,
    		posit_sales,
    		posit_mvmt,
    		posit_norm_mvmt,
    		count_inc_in_avg,
   		total_caps,
    		total_items,
    		total_units,
    		vat,
    		supp_total_sales,
    		supp_cost_of_sales,
    		supp_posit_mvmt,
    		supplier_norm_mvmt,
    		num_user1,
    		num_user2,
    		num_user3,
    		num_user4,
    		num_user5,
		num_user6,
    		oh_qty,
    		oh_cost,
    		oh_retail,
    		pog_retail,
/* Added columns on 06/22/1999  Suresh */
		ALLOC_CUBIC_METERS,
		ALLOC_DSP_SQMETERS,
		ALLOC_FLR_SQMETERS,
		ALLOC_LINEAR_METER,
		POSIT_MVMT_REG ,
		POSIT_SALES_REG,
		POSIT_COST_REG ,
		POSIT_MVMT_PROMO ,
		POSIT_SALES_PROMO,
		POSIT_COST_PROMO ,
		POSIT_MVMT_CLRNC ,
		POSIT_SALES_CLRNC,
		POSIT_COST_CLRNC ,
		POSIT_MVMT_RETN,
		POSIT_SALES_RETN ,
		POSIT_COST_RETN,
		INVENTORY_ITEMS,
		INVENTORY_RETAIL ,
		INVENTORY_COST ,
		RECEIVED_ITEMS ,
		RECEIVED_RETAIL,
		RECEIVED_COST,
		TOTAL_ITEMS_RETAIL ,
		TOTAL_ITEMS_COST ,
		MIN_PRES_ITEMS ,
		MIN_PRES_RETAIL,
		MIN_PRES_COST,
/* Added dmgr extensions columns on 01/24/2001 by Maurice Ndansi */
                posit_indcost_reg,
	        posit_indcost_promo,
	 	posit_indcost_clrnc,
	 	posit_indcost_retn,
         	Sales_retail_5,
         	Sales_Cost_5,
         	Sales_Items_5,
         	Sales_indcost_5,
         	Sales_retail_6,
         	Sales_Cost_6,
         	Sales_Items_6,
         	Sales_indcost_6,
         	Sales_retail_7,
         	Sales_Cost_7,
         	Sales_Items_7,
         	Sales_indcost_7,
         	Sales_retail_8,
         	Sales_Cost_8,
         	Sales_Items_8,
         	Sales_indcost_8,
         	Sales_retail_9,
         	Sales_Cost_9,
         	Sales_Items_9,
         	Sales_indcost_9,
         	Sales_retail_10,
         	Sales_Cost_10,
         	Sales_Items_10,
         	Sales_indcost_10,
         	Inv_retail_1,
         	Inv_Cost_1,
         	Inv_Items_1,
         	Inv_indcost_1,
         	Inv_retail_2,
         	Inv_Cost_2,
         	Inv_Items_2,
         	Inv_indcost_2,
         	Inv_retail_3,
         	Inv_Cost_3,
         	Inv_Items_3,
         	Inv_indcost_3,
         	Inv_retail_4,
         	Inv_Cost_4,
         	Inv_Items_4,
         	Inv_indcost_4,
         	Inv_retail_5,
         	Inv_Cost_5,
         	Inv_Items_5,
         	Inv_indcost_5,
         	Inv_retail_6,
         	Inv_Cost_6,
         	Inv_Items_6,
         	Inv_indcost_6,
         	Inv_retail_7,
         	Inv_Cost_7,
         	Inv_Items_7,
         	Inv_indcost_7,
         	Inv_retail_8,
         	Inv_Cost_8,
         	Inv_Items_8,
         	Inv_indcost_8,
         	Inv_retail_9,
         	Inv_Cost_9,
         	Inv_Items_9,
         	Inv_indcost_9,
         	Inv_retail_10,
         	Inv_Cost_10,
         	Inv_Items_10,
         	Inv_indcost_10,
         	Sum_user1,
         	Sum_user2,
         	Sum_user3,
         	Sum_user4,
         	Sum_user5,
         	Avg_user1,
         	Avg_user2,
         	Avg_user3,
         	Avg_user4,
         	Avg_user5,
         	inventory_indcost,
         oh_indcost,
         received_indcost,
         active_loc_flag)
    SELECT 	sysdate,
      	1,
      	avg(lv5finc.period),
      	sum(lv5finc.days_in_period),
      	avg(lv5finc.cycle),
      	1,
      	t_lv4loc_id,
      	sum(lv5finc.cubic_meters),
      	sum(lv5finc.dsp_sqmeters),
    		sum(lv5finc.flr_sqmeters),
    		sum(lv5finc.linear_meters),
      	sum(lv5finc.used_cubic_meters),
      	sum(lv5finc.used_dsp_sqmeters),
      	sum(lv5finc.used_linear_meters),
		sum(lv5finc.proj_sales),
      	sum(lv5finc.proj_gp),
      	sum(lv5finc.loss_sales),
      	sum(lv5finc.loss_gp),
      	1,
      	sum(lv5finc.dpp_dollar),
      	sum(lv5finc.dpp_item),
      	sum(cost_of_invent),
      	sum(dir_cost_of_sales),
      	sum(indir_cost_of_sale),
      	sum(gm_roii),
      	sum(lv5finc.posit_sales),
      	sum(lv5finc.posit_mvmt),
      	sum(lv5finc.posit_norm_mvmt),
      	sum(lv5finc.count_inc_in_avg),
      	sum(lv5finc.total_caps),
      	sum(lv5finc.total_items),
      	sum(lv5finc.total_units),
          	sum(lv5finc.vat),
      	sum(supp_total_sales),
      	sum(supp_cost_of_sales),
      	sum(lv5finc.supp_posit_mvmt),
      	sum(lv5finc.supplier_norm_mvmt),
      	sum(lv5finc.num_user1),
      	sum(lv5finc.num_user2),
      	sum(lv5finc.num_user3),
      	sum(lv5finc.num_user4),
      	sum(lv5finc.num_user5),
      	sum(lv5finc.num_user6),
      	sum(lv5finc.oh_qty),
      	sum(lv5finc.oh_cost),
      	sum(lv5finc.oh_retail),
      	sum(lv5finc.pog_retail),
		sum(lv5finc.ALLOC_CUBIC_METERS),
		sum(lv5finc.ALLOC_DSP_SQMETERS),
		sum(lv5finc.ALLOC_FLR_SQMETERS),
		sum(lv5finc.ALLOC_LINEAR_METER),
		sum(lv5finc.POSIT_MVMT_REG ),
		sum(lv5finc.POSIT_SALES_REG),
		sum(lv5finc.POSIT_COST_REG ),
		sum(lv5finc.POSIT_MVMT_PROMO ),
		sum(lv5finc.POSIT_SALES_PROMO),
		sum(lv5finc.POSIT_COST_PROMO ),
		sum(lv5finc.POSIT_MVMT_CLRNC ),
		sum(lv5finc.POSIT_SALES_CLRNC),
		sum(lv5finc.POSIT_COST_CLRNC) ,
		sum(lv5finc.POSIT_MVMT_RETN),
		sum(lv5finc.POSIT_SALES_RETN) ,
		sum(lv5finc.POSIT_COST_RETN),
		sum(lv5finc.INVENTORY_ITEMS),
		sum(lv5finc.INVENTORY_RETAIL) ,
		sum(lv5finc.INVENTORY_COST) ,
		sum(lv5finc.RECEIVED_ITEMS) ,
		sum(lv5finc.RECEIVED_RETAIL),
		sum(lv5finc.RECEIVED_COST),
		sum(lv5finc.TOTAL_ITEMS_RETAIL) ,
		sum(lv5finc.TOTAL_ITEMS_COST) ,
		sum(lv5finc.MIN_PRES_ITEMS ),
		sum(lv5finc.MIN_PRES_RETAIL),
		sum(lv5finc.MIN_PRES_COST),
		sum(lv5finc.posit_indcost_reg),
	 	sum(lv5finc.posit_indcost_promo),
	 	sum(lv5finc.posit_indcost_clrnc),
	 	sum(lv5finc.posit_indcost_retn),
         	sum(lv5finc.Sales_retail_5),
         	sum(lv5finc.Sales_Cost_5),
         	sum(lv5finc.Sales_Items_5),
         	sum(lv5finc.Sales_Indcost_5),
         	sum(lv5finc.Sales_retail_6),
         	sum(lv5finc.Sales_Cost_6),
         	sum(lv5finc.Sales_Items_6),
         	sum(lv5finc.Sales_Indcost_6),
         	sum(lv5finc.Sales_retail_7),
         	sum(lv5finc.Sales_Cost_7),
         	sum(lv5finc.Sales_Items_7),
         	sum(lv5finc.Sales_Indcost_7),
         	sum(lv5finc.Sales_retail_8),
         	sum(lv5finc.Sales_Cost_8),
         	sum(lv5finc.Sales_Items_8),
         	sum(lv5finc.Sales_Indcost_8),
         	sum(lv5finc.Sales_retail_9),
         	sum(lv5finc.Sales_Cost_9),
         	sum(lv5finc.Sales_Items_9),
         	sum(lv5finc.Sales_Indcost_9),
         	sum(lv5finc.Sales_retail_10),
         	sum(lv5finc.Sales_Cost_10),
         	sum(lv5finc.Sales_Items_10),
         	sum(lv5finc.Sales_Indcost_10),
         	sum(lv5finc.Inv_retail_1),
         	sum(lv5finc.Inv_Cost_1),
         	sum(lv5finc.Inv_Items_1),
         	sum(lv5finc.Inv_Indcost_1),
         	sum(lv5finc.Inv_retail_2),
         	sum(lv5finc.Inv_Cost_2),
         	sum(lv5finc.Inv_Items_2),
         	sum(lv5finc.Inv_Indcost_2),
         	sum(lv5finc.Inv_retail_3),
         	sum(lv5finc.Inv_Cost_3),
         	sum(lv5finc.Inv_Items_3),
         	sum(lv5finc.Inv_Indcost_3),
         	sum(lv5finc.Inv_retail_4),
         	sum(lv5finc.Inv_Cost_4),
         	sum(lv5finc.Inv_Items_4),
         	sum(lv5finc.Inv_Indcost_4),
         	sum(lv5finc.Inv_retail_5),
         	sum(lv5finc.Inv_Cost_5),
         	sum(lv5finc.Inv_Items_5),
         	sum(lv5finc.Inv_Indcost_5),
         	sum(lv5finc.Inv_retail_6),
         	sum(lv5finc.Inv_Cost_6),
         	sum(lv5finc.Inv_Items_6),
         	sum(lv5finc.Inv_Indcost_6),
         	sum(lv5finc.Inv_retail_7),
         	sum(lv5finc.Inv_Cost_7),
         	sum(lv5finc.Inv_Items_7),
         	sum(lv5finc.Inv_Indcost_7),
         	sum(lv5finc.Inv_retail_8),
         	sum(lv5finc.Inv_Cost_8),
         	sum(lv5finc.Inv_Items_8),
         	sum(lv5finc.Inv_Indcost_8),
         	sum(lv5finc.Inv_retail_9),
         	sum(lv5finc.Inv_Cost_9),
         	sum(lv5finc.Inv_Items_9),
         	sum(lv5finc.Inv_Indcost_9),
         	sum(lv5finc.Inv_retail_10),
         	sum(lv5finc.Inv_Cost_10),
         	sum(lv5finc.Inv_Items_10),
         	sum(lv5finc.Inv_Indcost_10),
         	sum(lv5finc.Sum_user1),
         	sum(lv5finc.Sum_user2),
         	sum(lv5finc.Sum_user3),
         	sum(lv5finc.Sum_user4),
         	sum(lv5finc.Sum_user5),
         	avg(lv5finc.Avg_user1),
         	avg(lv5finc.Avg_user2),
         	avg(lv5finc.Avg_user3),
         	avg(lv5finc.Avg_user4),
         	avg(lv5finc.Avg_user5),
			sum(lv5finc.inventory_indcost),
            sum(lv5finc.oh_indcost),
            sum(lv5finc.received_indcost),
            sum(lv5finc.active_loc_flag)
	from  lv5finc , lv5loc
      where lv5finc.lv5loc_id = lv5loc.lv5loc_id and
            lv5loc.lv4loc_id = t_lv4loc_id and
            lv5finc.period = c6.period and
            lv5finc.cycle = c6.cycle
    group by lv5finc.cycle,lv5finc.period;
END loop ;
delete from temp_period;
--  end loop for period.
-- end of finc records creation.
ins_corp_store_log ('p_cluster_store_l6','info','End building finc records for cluster '||c1.cluster_userid,null,null,null) ;
-- Creation of mrll records.
-- delete rows from lv5roll, lv5mrll if exists for this store
   delete from lv5roll where exists
      ( select lv5loc_id from lv5loc
        where  lv5loc.lv4loc_id = t_lv4loc_id and
               lv5loc.lv5loc_id = lv5roll.lv5loc_id ) ;
   delete from lv5mrll where exists
      ( select lv5loc_id from lv5loc
        where  lv5loc.lv4loc_id = t_lv4loc_id and
               lv5loc.lv5loc_id = lv5mrll.lv5loc_id ) ;
ins_corp_store_log ('p_cluster_store_l6','info','Deleted previous rows from lv5roll and lv5mrll for cluster '||c1.cluster_userid,null,null,null) ;
-- delete rows from lv4roll, lv4mrll if exists for this store
   delete from lv4roll where lv4loc_id = t_lv4loc_id ;
   delete from lv4mrll where lv4loc_id = t_lv4loc_id ;
ins_corp_store_log ('p_cluster_store_l6','info','Deleted previous rows from lv4roll and lv4mrll for cluster '||c1.cluster_userid,null,null,null) ;
ins_corp_store_log ('p_cluster_store_l6','info','Started building Mrll records for cluster '||c1.cluster_userid,null,null,null) ;
--build lv5mrll
FOR   c10 in
 	(SELECT distinct lv5mast_id
 	FROM	 clusterdetail, lv5loc
	WHERE  clusterdetail.lv4loc_id = lv5loc.lv4loc_id
	AND    clusterdetail.cluster_master_id = c1.cluster_master_id) loop
	SELECT lv5loc_id
	INTO   corp_lv5loc_id
	FROM	 lv5loc
	WHERE  lv5loc.lv5mast_id = c10.lv5mast_id
	AND    lv5loc.lv4loc_id = t_lv4loc_id     ;
   Insert into maxdata.lv5mrll
     (last_update,
      changed_by_batch,
      category_level,
      ctree_or_loc_id,
      version_id,
      cycle,
      lv5loc_id,
      cubic_meters,
      dsp_sqmeters,
      flr_sqmeters,
      linear_meters,
      used_cubic_meters,
      used_dsp_sqmeters,
      used_linear_meters,
      gm_roii,
      proj_sales,
      proj_gp,
      loss_sales,
      loss_gp,
      cost_of_invent,
      dir_cost_of_sales,
      indir_cost_of_sale,
      days_in_period,
      days_supply,
      dpp_dollar,
      dpp_item,
      posit_sales,
      posit_mvmt,
      posit_norm_mvmt,
      count_num_prodloc,
      count_inc_in_avg,
      total_caps,
      total_items,
      total_units,
      vat,
      supp_total_sales,
      supp_cost_of_sales,
      supp_posit_mvmt,
      supplier_norm_mvmt,
      num_user1,
      num_user2,
      num_user3,
      num_user4,
      num_user5,
      num_user6,
      oh_qty,
      oh_cost,
      oh_retail,
      pog_retail,
      periods_rolled,
/* Added columns on 06/22/1999  Suresh */
		ALLOC_CUBIC_METERS,
		ALLOC_DSP_SQMETERS,
		ALLOC_FLR_SQMETERS,
		ALLOC_LINEAR_METER,
		POSIT_MVMT_REG ,
		POSIT_SALES_REG,
		POSIT_COST_REG ,
		POSIT_MVMT_PROMO ,
		POSIT_SALES_PROMO,
		POSIT_COST_PROMO ,
		POSIT_MVMT_CLRNC ,
		POSIT_SALES_CLRNC,
		POSIT_COST_CLRNC ,
		POSIT_MVMT_RETN,
		POSIT_SALES_RETN ,
		POSIT_COST_RETN,
		INVENTORY_ITEMS,
		INVENTORY_RETAIL ,
		INVENTORY_COST ,
		RECEIVED_ITEMS ,
		RECEIVED_RETAIL,
		RECEIVED_COST,
		TOTAL_ITEMS_RETAIL ,
		TOTAL_ITEMS_COST ,
		MIN_PRES_ITEMS ,
		MIN_PRES_RETAIL,
		MIN_PRES_COST,
/* Added dmgr extensions columns on 01/24/2001 by Maurice Ndansi */
                posit_indcost_reg,
	        posit_indcost_promo,
	 	posit_indcost_clrnc,
	 	posit_indcost_retn,
         	Sales_retail_5,
         	Sales_Cost_5,
         	Sales_Items_5,
         	Sales_indcost_5,
         	Sales_retail_6,
         	Sales_Cost_6,
         	Sales_Items_6,
         	Sales_indcost_6,
         	Sales_retail_7,
         	Sales_Cost_7,
         	Sales_Items_7,
         	Sales_indcost_7,
         	Sales_retail_8,
         	Sales_Cost_8,
         	Sales_Items_8,
         	Sales_indcost_8,
         	Sales_retail_9,
         	Sales_Cost_9,
         	Sales_Items_9,
         	Sales_indcost_9,
         	Sales_retail_10,
         	Sales_Cost_10,
         	Sales_Items_10,
         	Sales_indcost_10,
         	Inv_retail_1,
         	Inv_Cost_1,
         	Inv_Items_1,
         	Inv_indcost_1,
         	Inv_retail_2,
         	Inv_Cost_2,
         	Inv_Items_2,
         	Inv_indcost_2,
         	Inv_retail_3,
         	Inv_Cost_3,
         	Inv_Items_3,
         	Inv_indcost_3,
         	Inv_retail_4,
         	Inv_Cost_4,
         	Inv_Items_4,
         	Inv_indcost_4,
         	Inv_retail_5,
         	Inv_Cost_5,
         	Inv_Items_5,
         	Inv_indcost_5,
         	Inv_retail_6,
         	Inv_Cost_6,
         	Inv_Items_6,
         	Inv_indcost_6,
         	Inv_retail_7,
         	Inv_Cost_7,
         	Inv_Items_7,
         	Inv_indcost_7,
         	Inv_retail_8,
         	Inv_Cost_8,
         	Inv_Items_8,
         	Inv_indcost_8,
         	Inv_retail_9,
         	Inv_Cost_9,
         	Inv_Items_9,
         	Inv_indcost_9,
         	Inv_retail_10,
         	Inv_Cost_10,
         	Inv_Items_10,
         	Inv_indcost_10,
         	Sum_user1,
         	Sum_user2,
         	Sum_user3,
         	Sum_user4,
         	Sum_user5,
         	Avg_user1,
         	Avg_user2,
         	Avg_user3,
         	Avg_user4,
         	Avg_user5,
         	inventory_indcost,
         oh_indcost,
         cum_eop_units,
         cum_eop_retail,
         cum_eop_cost,
         cum_eop_indcost,
         received_indcost)

    select
      sysdate,
      1,
      category_level,
      lv5mrll.ctree_or_loc_id,
      1,
      max(lv5mrll.cycle),
      corp_lv5loc_id,
      sum(lv5mrll.cubic_meters),
      sum(lv5mrll.dsp_sqmeters),
      sum(lv5mrll.flr_sqmeters),
      sum(lv5mrll.linear_meters),
      sum(lv5mrll.used_cubic_meters),
      sum(lv5mrll.used_dsp_sqmeters),
      sum(lv5mrll.used_linear_meters),
      1,
      sum(lv5mrll.proj_sales),
      sum(lv5mrll.proj_gp),
      sum(lv5mrll.loss_sales),
      sum(lv5mrll.loss_gp),
      sum(lv5mrll.cost_of_invent),
      sum(lv5mrll.dir_cost_of_sales),
      sum(lv5mrll.indir_cost_of_sale),
      sum(lv5mrll.days_in_period),
      1,
      sum(lv5mrll.dpp_dollar),
      sum(lv5mrll.dpp_item),
      sum(lv5mrll.posit_sales),
      sum(lv5mrll.posit_mvmt),
      sum(lv5mrll.posit_norm_mvmt),
      sum(lv5mrll.count_num_prodloc),
      sum(lv5mrll.count_inc_in_avg),
      sum(lv5mrll.total_caps),
      sum(lv5mrll.total_items),
      sum(lv5mrll.total_units),
      sum(lv5mrll.vat),
      sum(lv5mrll.supp_total_sales),
      sum(lv5mrll.supp_cost_of_sales),
      sum(lv5mrll.supp_posit_mvmt),
      sum(lv5mrll.supplier_norm_mvmt),
      sum(lv5mrll.num_user1),
      sum(lv5mrll.num_user2),
      avg(lv5mrll.num_user3),
      sum(lv5mrll.num_user4),
      avg(lv5mrll.num_user5),
      avg(lv5mrll.num_user6),
      sum(lv5mrll.oh_qty),
      sum(lv5mrll.oh_cost),
      sum(lv5mrll.oh_retail),
      sum(lv5mrll.pog_retail),
      avg(lv5mrll.periods_rolled),
	sum(lv5mrll.ALLOC_CUBIC_METERS),
	sum(lv5mrll.ALLOC_DSP_SQMETERS),
	sum(lv5mrll.ALLOC_FLR_SQMETERS),
	sum(lv5mrll.ALLOC_LINEAR_METER),
	sum(lv5mrll.POSIT_MVMT_REG ),
	sum(lv5mrll.POSIT_SALES_REG),
	sum(lv5mrll.POSIT_COST_REG ),
	sum(lv5mrll.POSIT_MVMT_PROMO ),
	sum(lv5mrll.POSIT_SALES_PROMO),
	sum(lv5mrll.POSIT_COST_PROMO ),
	sum(lv5mrll.POSIT_MVMT_CLRNC ),
	sum(lv5mrll.POSIT_SALES_CLRNC),
	sum(lv5mrll.POSIT_COST_CLRNC) ,
	sum(lv5mrll.POSIT_MVMT_RETN),
	sum(lv5mrll.POSIT_SALES_RETN) ,
	sum(lv5mrll.POSIT_COST_RETN),
	sum(lv5mrll.INVENTORY_ITEMS),
	sum(lv5mrll.INVENTORY_RETAIL) ,
	sum(lv5mrll.INVENTORY_COST) ,
	sum(lv5mrll.RECEIVED_ITEMS) ,
	sum(lv5mrll.RECEIVED_RETAIL),
	sum(lv5mrll.RECEIVED_COST),
	sum(lv5mrll.TOTAL_ITEMS_RETAIL) ,
	sum(lv5mrll.TOTAL_ITEMS_COST) ,
	sum(lv5mrll.MIN_PRES_ITEMS ),
	sum(lv5mrll.MIN_PRES_RETAIL),
	sum(lv5mrll.MIN_PRES_COST),
		sum(lv5mrll.posit_indcost_reg),
	 	sum(lv5mrll.posit_indcost_promo),
	 	sum(lv5mrll.posit_indcost_clrnc),
	 	sum(lv5mrll.posit_indcost_retn),
         	sum(lv5mrll.Sales_retail_5),
         	sum(lv5mrll.Sales_Cost_5),
         	sum(lv5mrll.Sales_Items_5),
         	sum(lv5mrll.Sales_Indcost_5),
         	sum(lv5mrll.Sales_retail_6),
         	sum(lv5mrll.Sales_Cost_6),
         	sum(lv5mrll.Sales_Items_6),
         	sum(lv5mrll.Sales_Indcost_6),
         	sum(lv5mrll.Sales_retail_7),
         	sum(lv5mrll.Sales_Cost_7),
         	sum(lv5mrll.Sales_Items_7),
         	sum(lv5mrll.Sales_Indcost_7),
         	sum(lv5mrll.Sales_retail_8),
         	sum(lv5mrll.Sales_Cost_8),
         	sum(lv5mrll.Sales_Items_8),
         	sum(lv5mrll.Sales_Indcost_8),
         	sum(lv5mrll.Sales_retail_9),
         	sum(lv5mrll.Sales_Cost_9),
         	sum(lv5mrll.Sales_Items_9),
         	sum(lv5mrll.Sales_Indcost_9),
         	sum(lv5mrll.Sales_retail_10),
         	sum(lv5mrll.Sales_Cost_10),
         	sum(lv5mrll.Sales_Items_10),
         	sum(lv5mrll.Sales_Indcost_10),
         	sum(lv5mrll.Inv_retail_1),
         	sum(lv5mrll.Inv_Cost_1),
         	sum(lv5mrll.Inv_Items_1),
         	sum(lv5mrll.Inv_Indcost_1),
         	sum(lv5mrll.Inv_retail_2),
         	sum(lv5mrll.Inv_Cost_2),
         	sum(lv5mrll.Inv_Items_2),
         	sum(lv5mrll.Inv_Indcost_2),
         	sum(lv5mrll.Inv_retail_3),
         	sum(lv5mrll.Inv_Cost_3),
         	sum(lv5mrll.Inv_Items_3),
         	sum(lv5mrll.Inv_Indcost_3),
         	sum(lv5mrll.Inv_retail_4),
         	sum(lv5mrll.Inv_Cost_4),
         	sum(lv5mrll.Inv_Items_4),
         	sum(lv5mrll.Inv_Indcost_4),
         	sum(lv5mrll.Inv_retail_5),
         	sum(lv5mrll.Inv_Cost_5),
         	sum(lv5mrll.Inv_Items_5),
         	sum(lv5mrll.Inv_Indcost_5),
         	sum(lv5mrll.Inv_retail_6),
         	sum(lv5mrll.Inv_Cost_6),
         	sum(lv5mrll.Inv_Items_6),
         	sum(lv5mrll.Inv_Indcost_6),
         	sum(lv5mrll.Inv_retail_7),
         	sum(lv5mrll.Inv_Cost_7),
         	sum(lv5mrll.Inv_Items_7),
         	sum(lv5mrll.Inv_Indcost_7),
         	sum(lv5mrll.Inv_retail_8),
         	sum(lv5mrll.Inv_Cost_8),
         	sum(lv5mrll.Inv_Items_8),
         	sum(lv5mrll.Inv_Indcost_8),
         	sum(lv5mrll.Inv_retail_9),
         	sum(lv5mrll.Inv_Cost_9),
         	sum(lv5mrll.Inv_Items_9),
         	sum(lv5mrll.Inv_Indcost_9),
         	sum(lv5mrll.Inv_retail_10),
         	sum(lv5mrll.Inv_Cost_10),
         	sum(lv5mrll.Inv_Items_10),
         	sum(lv5mrll.Inv_Indcost_10),
         	sum(lv5mrll.Sum_user1),
         	sum(lv5mrll.Sum_user2),
         	sum(lv5mrll.Sum_user3),
         	sum(lv5mrll.Sum_user4),
         	sum(lv5mrll.Sum_user5),
         	avg(lv5mrll.Avg_user1),
         	avg(lv5mrll.Avg_user2),
         	avg(lv5mrll.Avg_user3),
         	avg(lv5mrll.Avg_user4),
         	avg(lv5mrll.Avg_user5),
			sum(lv5mrll.inventory_indcost),
            sum(lv5mrll.oh_indcost),
            sum(lv5mrll.cum_eop_units),
            sum(lv5mrll.cum_eop_retail),
            sum(lv5mrll.cum_eop_cost),
            sum(lv5mrll.cum_eop_indcost),
            sum(lv5mrll.received_indcost)
     from maxdata.lv5mrll , lv5loc , clusterdetail
    where lv5mrll.lv5loc_id = lv5loc.lv5loc_id and
          lv5loc.lv5mast_id = c10.lv5mast_id and
          lv5loc.lv4loc_id = clusterdetail.lv4loc_id and
          clusterdetail.cluster_master_id = c1.cluster_master_id
    group by lv5mrll.category_level, lv5mrll.ctree_or_loc_id;
END loop;
-- end loop for lv5mrll.
-- build lv4mrll records.
   Insert into maxdata.lv4mrll
     (last_update,
      changed_by_batch,
      category_level,
      ctree_or_loc_id,
      version_id,
      cycle,
      lv4loc_id,
      cubic_meters,
      dsp_sqmeters,
      flr_sqmeters,
      linear_meters,
      used_cubic_meters,
      used_dsp_sqmeters,
      used_linear_meters,
      gm_roii,
      proj_sales,
      proj_gp,
      loss_sales,
      loss_gp,
      cost_of_invent,
      dir_cost_of_sales,
      indir_cost_of_sale,
      days_in_period,
      days_supply,
      dpp_dollar,
      dpp_item,
      posit_sales,
      posit_mvmt,
      posit_norm_mvmt,
      count_num_prodloc,
      count_inc_in_avg,
      total_caps,
      total_items,
      total_units,
      vat,
      supp_total_sales,
      supp_cost_of_sales,
      supp_posit_mvmt,
      supplier_norm_mvmt,
      num_user1,
      num_user2,
      num_user3,
      num_user4,
      num_user5,
      num_user6,
      oh_qty,
      oh_cost,
      oh_retail,
      pog_retail,
      periods_rolled,
/* Added columns on 06/22/1999  Suresh */
		ALLOC_CUBIC_METERS,
		ALLOC_DSP_SQMETERS,
		ALLOC_FLR_SQMETERS,
		ALLOC_LINEAR_METER,
		POSIT_MVMT_REG ,
		POSIT_SALES_REG,
		POSIT_COST_REG ,
		POSIT_MVMT_PROMO ,
		POSIT_SALES_PROMO,
		POSIT_COST_PROMO ,
		POSIT_MVMT_CLRNC ,
		POSIT_SALES_CLRNC,
		POSIT_COST_CLRNC ,
		POSIT_MVMT_RETN,
		POSIT_SALES_RETN ,
		POSIT_COST_RETN,
		INVENTORY_ITEMS,
		INVENTORY_RETAIL ,
		INVENTORY_COST ,
		RECEIVED_ITEMS ,
		RECEIVED_RETAIL,
		RECEIVED_COST,
		TOTAL_ITEMS_RETAIL ,
		TOTAL_ITEMS_COST ,
		MIN_PRES_ITEMS ,
		MIN_PRES_RETAIL,
		MIN_PRES_COST,
/* Added dmgr extensions columns on 01/24/2001 by Maurice Ndansi */
                posit_indcost_reg,
	        posit_indcost_promo,
	 	posit_indcost_clrnc,
	 	posit_indcost_retn,
         	Sales_retail_5,
         	Sales_Cost_5,
         	Sales_Items_5,
         	Sales_indcost_5,
         	Sales_retail_6,
         	Sales_Cost_6,
         	Sales_Items_6,
         	Sales_indcost_6,
         	Sales_retail_7,
         	Sales_Cost_7,
         	Sales_Items_7,
         	Sales_indcost_7,
         	Sales_retail_8,
         	Sales_Cost_8,
         	Sales_Items_8,
         	Sales_indcost_8,
         	Sales_retail_9,
         	Sales_Cost_9,
         	Sales_Items_9,
         	Sales_indcost_9,
         	Sales_retail_10,
         	Sales_Cost_10,
         	Sales_Items_10,
         	Sales_indcost_10,
         	Inv_retail_1,
         	Inv_Cost_1,
         	Inv_Items_1,
         	Inv_indcost_1,
         	Inv_retail_2,
         	Inv_Cost_2,
         	Inv_Items_2,
         	Inv_indcost_2,
         	Inv_retail_3,
         	Inv_Cost_3,
         	Inv_Items_3,
         	Inv_indcost_3,
         	Inv_retail_4,
         	Inv_Cost_4,
         	Inv_Items_4,
         	Inv_indcost_4,
         	Inv_retail_5,
         	Inv_Cost_5,
         	Inv_Items_5,
         	Inv_indcost_5,
         	Inv_retail_6,
         	Inv_Cost_6,
         	Inv_Items_6,
         	Inv_indcost_6,
         	Inv_retail_7,
         	Inv_Cost_7,
         	Inv_Items_7,
         	Inv_indcost_7,
         	Inv_retail_8,
         	Inv_Cost_8,
         	Inv_Items_8,
         	Inv_indcost_8,
         	Inv_retail_9,
         	Inv_Cost_9,
         	Inv_Items_9,
         	Inv_indcost_9,
         	Inv_retail_10,
         	Inv_Cost_10,
         	Inv_Items_10,
         	Inv_indcost_10,
         	Sum_user1,
         	Sum_user2,
         	Sum_user3,
         	Sum_user4,
         	Sum_user5,
         	Avg_user1,
         	Avg_user2,
         	Avg_user3,
         	Avg_user4,
         	Avg_user5,
         	inventory_indcost,
         oh_indcost,
         cum_eop_units,
         cum_eop_retail,
         cum_eop_cost,
         cum_eop_indcost,
         received_indcost)
    select
      sysdate,
      1,
      category_level,
      lv5mrll.ctree_or_loc_id,
      1,
      max(lv5mrll.cycle),
      t_lv4loc_id,
      sum(lv5mrll.cubic_meters),
      sum(lv5mrll.dsp_sqmeters),
      sum(lv5mrll.flr_sqmeters),
      sum(lv5mrll.linear_meters),
      sum(lv5mrll.used_cubic_meters),
      sum(lv5mrll.used_dsp_sqmeters),
      sum(lv5mrll.used_linear_meters),
      1,
      sum(lv5mrll.proj_sales),
      sum(lv5mrll.proj_gp),
      sum(lv5mrll.loss_sales),
      sum(lv5mrll.loss_gp),
      sum(lv5mrll.cost_of_invent),
      sum(lv5mrll.dir_cost_of_sales),
      sum(lv5mrll.indir_cost_of_sale),
      sum(lv5mrll.days_in_period),
      1,
      sum(lv5mrll.dpp_dollar),
      sum(lv5mrll.dpp_item),
      sum(lv5mrll.posit_sales),
      sum(lv5mrll.posit_mvmt),
      sum(lv5mrll.posit_norm_mvmt),
      sum(lv5mrll.count_num_prodloc),
      sum(lv5mrll.count_inc_in_avg),
      sum(lv5mrll.total_caps),
      sum(lv5mrll.total_items),
      sum(lv5mrll.total_units),
      sum(lv5mrll.vat),
      sum(lv5mrll.supp_total_sales),
      sum(lv5mrll.supp_cost_of_sales),
      sum(lv5mrll.supp_posit_mvmt),
      sum(lv5mrll.supplier_norm_mvmt),
      sum(lv5mrll.num_user1),
      sum(lv5mrll.num_user2),
      avg(lv5mrll.num_user3),
      sum(lv5mrll.num_user4),
      avg(lv5mrll.num_user5),
      avg(lv5mrll.num_user6),
      sum(lv5mrll.oh_qty),
      sum(lv5mrll.oh_cost),
      sum(lv5mrll.oh_retail),
      sum(lv5mrll.pog_retail),
      avg(lv5mrll.periods_rolled),
		sum(lv5mrll.ALLOC_CUBIC_METERS),
		sum(lv5mrll.ALLOC_DSP_SQMETERS),
		sum(lv5mrll.ALLOC_FLR_SQMETERS),
		sum(lv5mrll.ALLOC_LINEAR_METER),
		sum(lv5mrll.POSIT_MVMT_REG ),
		sum(lv5mrll.POSIT_SALES_REG),
		sum(lv5mrll.POSIT_COST_REG ),
		sum(lv5mrll.POSIT_MVMT_PROMO ),
		sum(lv5mrll.POSIT_SALES_PROMO),
		sum(lv5mrll.POSIT_COST_PROMO ),
		sum(lv5mrll.POSIT_MVMT_CLRNC ),
		sum(lv5mrll.POSIT_SALES_CLRNC),
		sum(lv5mrll.POSIT_COST_CLRNC) ,
		sum(lv5mrll.POSIT_MVMT_RETN),
		sum(lv5mrll.POSIT_SALES_RETN) ,
		sum(lv5mrll.POSIT_COST_RETN),
		sum(lv5mrll.INVENTORY_ITEMS),
		sum(lv5mrll.INVENTORY_RETAIL) ,
		sum(lv5mrll.INVENTORY_COST) ,
		sum(lv5mrll.RECEIVED_ITEMS) ,
		sum(lv5mrll.RECEIVED_RETAIL),
		sum(lv5mrll.RECEIVED_COST),
		sum(lv5mrll.TOTAL_ITEMS_RETAIL) ,
		sum(lv5mrll.TOTAL_ITEMS_COST) ,
		sum(lv5mrll.MIN_PRES_ITEMS ),
		sum(lv5mrll.MIN_PRES_RETAIL),
		sum(lv5mrll.MIN_PRES_COST),
		sum(lv5mrll.posit_indcost_reg),
	 	sum(lv5mrll.posit_indcost_promo),
	 	sum(lv5mrll.posit_indcost_clrnc),
	 	sum(lv5mrll.posit_indcost_retn),
         	sum(lv5mrll.Sales_retail_5),
         	sum(lv5mrll.Sales_Cost_5),
         	sum(lv5mrll.Sales_Items_5),
         	sum(lv5mrll.Sales_Indcost_5),
         	sum(lv5mrll.Sales_retail_6),
         	sum(lv5mrll.Sales_Cost_6),
         	sum(lv5mrll.Sales_Items_6),
         	sum(lv5mrll.Sales_Indcost_6),
         	sum(lv5mrll.Sales_retail_7),
         	sum(lv5mrll.Sales_Cost_7),
         	sum(lv5mrll.Sales_Items_7),
         	sum(lv5mrll.Sales_Indcost_7),
         	sum(lv5mrll.Sales_retail_8),
         	sum(lv5mrll.Sales_Cost_8),
         	sum(lv5mrll.Sales_Items_8),
         	sum(lv5mrll.Sales_Indcost_8),
         	sum(lv5mrll.Sales_retail_9),
         	sum(lv5mrll.Sales_Cost_9),
         	sum(lv5mrll.Sales_Items_9),
         	sum(lv5mrll.Sales_Indcost_9),
         	sum(lv5mrll.Sales_retail_10),
         	sum(lv5mrll.Sales_Cost_10),
         	sum(lv5mrll.Sales_Items_10),
         	sum(lv5mrll.Sales_Indcost_10),
         	sum(lv5mrll.Inv_retail_1),
         	sum(lv5mrll.Inv_Cost_1),
         	sum(lv5mrll.Inv_Items_1),
         	sum(lv5mrll.Inv_Indcost_1),
         	sum(lv5mrll.Inv_retail_2),
         	sum(lv5mrll.Inv_Cost_2),
         	sum(lv5mrll.Inv_Items_2),
         	sum(lv5mrll.Inv_Indcost_2),
         	sum(lv5mrll.Inv_retail_3),
         	sum(lv5mrll.Inv_Cost_3),
         	sum(lv5mrll.Inv_Items_3),
         	sum(lv5mrll.Inv_Indcost_3),
         	sum(lv5mrll.Inv_retail_4),
         	sum(lv5mrll.Inv_Cost_4),
         	sum(lv5mrll.Inv_Items_4),
         	sum(lv5mrll.Inv_Indcost_4),
         	sum(lv5mrll.Inv_retail_5),
         	sum(lv5mrll.Inv_Cost_5),
         	sum(lv5mrll.Inv_Items_5),
         	sum(lv5mrll.Inv_Indcost_5),
         	sum(lv5mrll.Inv_retail_6),
         	sum(lv5mrll.Inv_Cost_6),
         	sum(lv5mrll.Inv_Items_6),
         	sum(lv5mrll.Inv_Indcost_6),
         	sum(lv5mrll.Inv_retail_7),
         	sum(lv5mrll.Inv_Cost_7),
         	sum(lv5mrll.Inv_Items_7),
         	sum(lv5mrll.Inv_Indcost_7),
         	sum(lv5mrll.Inv_retail_8),
         	sum(lv5mrll.Inv_Cost_8),
         	sum(lv5mrll.Inv_Items_8),
         	sum(lv5mrll.Inv_Indcost_8),
         	sum(lv5mrll.Inv_retail_9),
         	sum(lv5mrll.Inv_Cost_9),
         	sum(lv5mrll.Inv_Items_9),
         	sum(lv5mrll.Inv_Indcost_9),
         	sum(lv5mrll.Inv_retail_10),
         	sum(lv5mrll.Inv_Cost_10),
         	sum(lv5mrll.Inv_Items_10),
         	sum(lv5mrll.Inv_Indcost_10),
         	sum(lv5mrll.Sum_user1),
         	sum(lv5mrll.Sum_user2),
         	sum(lv5mrll.Sum_user3),
         	sum(lv5mrll.Sum_user4),
         	sum(lv5mrll.Sum_user5),
         	avg(lv5mrll.Avg_user1),
         	avg(lv5mrll.Avg_user2),
         	avg(lv5mrll.Avg_user3),
         	avg(lv5mrll.Avg_user4),
         	avg(lv5mrll.Avg_user5),
		    sum(lv5mrll.inventory_indcost),
            sum(lv5mrll.oh_indcost),
            sum(lv5mrll.cum_eop_units),
            sum(lv5mrll.cum_eop_retail),
            sum(lv5mrll.cum_eop_cost),
            sum(lv5mrll.cum_eop_indcost),
            sum(lv5mrll.received_indcost)

    from   lv5mrll , lv5loc
    where  lv5mrll.lv5loc_id = lv5loc.lv5loc_id and
           lv5loc.lv4loc_id = t_lv4loc_id
    group by lv5mrll.category_level, lv5mrll.ctree_or_loc_id ;
ins_corp_store_log ('p_cluster_store_l6','info','End building mrll for cluster '||c1.cluster_userid,null,null,null) ;
--  Begin building roll records.
ins_corp_store_log ('p_cluster_store_l6','info','Started building roll for cluster '||c1.cluster_userid,
                     null,null,null) ;
Select periods_to_roll , period_type , current_period, current_cycle
into   l_periods_to_roll, l_period_type , l_current_period, l_current_cycle
from   maxapp.mmax_config;
periods_in_cycle := 0;
	 If l_period_type = 'Month' then
          periods_in_cycle := 12 ;
       elsif
          l_period_type = 'Quarter' then
          periods_in_cycle := 4 ;
       elsif
          l_period_type = 'Season' then
          periods_in_cycle := 4 ;
       elsif
          l_period_type = 'Week' then
          periods_in_cycle := 52 ;
       end if;
 --    calc period and cycle to roll from
 -- within a cycle
				If (l_current_period - l_periods_to_roll)>=1 Then
				--  roll from within cycle
				 l_period_roll_from := (l_current_period - l_periods_to_roll)+1 ;
			       l_cycle_roll_from := l_current_cycle  ;
				Elsif
            		-- across a cycle
				     l_periods_to_roll < periods_in_cycle Then
				-- periods to roll smaller that periods in cycle
				 l_period_roll_from:= (periods_in_cycle +(l_current_period - l_periods_to_roll))+1 ;
                         l_cycle_roll_from := l_current_cycle - 1 ;
			 	Else
				-- periods to roll bigger that periods in cycle
				 l_period_roll_from := (periods_in_cycle +(l_current_period - l_periods_to_roll))+1 ;
				 l_cycle_roll_from :=l_current_cycle - trunc(l_periods_to_roll/periods_in_cycle,0);
				End If ;
    Insert into maxdata.lv5roll
      (last_update,
    	changed_by_batch,
    	version_id,
    	cycle,
    	lv5loc_id,
    	cubic_meters,
    	dsp_sqmeters,
    	flr_sqmeters,
    	linear_meters,
    	used_cubic_meters,
    	used_dsp_sqmeters,
    	used_linear_meters,
    	loss_sales,
    	loss_gp,
    	proj_sales,
    	proj_gp,
      gm_roii,
      days_in_period,
    	days_supply,
    	dpp_dollar,
    	dpp_item,
    	cost_of_invent,
    	dir_cost_of_sales,
    	indir_cost_of_sale,
    	posit_sales,
    	posit_mvmt,
    	posit_norm_mvmt,
    	count_inc_in_avg,
    	total_caps,
    	total_units,
    	total_items,
    	vat,
    	supp_total_sales,
    	supp_cost_of_sales,
    	supp_posit_mvmt,
    	supplier_norm_mvmt,
    	num_user1,
    	num_user2,
    	num_user3,
    	num_user4,
    	num_user5,
    	num_user6,
    	oh_qty,
    	oh_cost,
    	oh_retail,
    	pog_retail,
    	periods_rolled,
/* Added columns on 06/22/1999  Suresh */
		ALLOC_CUBIC_METERS,
		ALLOC_DSP_SQMETERS,
		ALLOC_FLR_SQMETERS,
		ALLOC_LINEAR_METER,
		POSIT_MVMT_REG ,
		POSIT_SALES_REG,
		POSIT_COST_REG ,
		POSIT_MVMT_PROMO ,
		POSIT_SALES_PROMO,
		POSIT_COST_PROMO ,
		POSIT_MVMT_CLRNC ,
		POSIT_SALES_CLRNC,
		POSIT_COST_CLRNC ,
		POSIT_MVMT_RETN,
		POSIT_SALES_RETN ,
		POSIT_COST_RETN,
		INVENTORY_ITEMS,
		INVENTORY_RETAIL ,
		INVENTORY_COST ,
		RECEIVED_ITEMS ,
		RECEIVED_RETAIL,
		RECEIVED_COST,
		TOTAL_ITEMS_RETAIL ,
		TOTAL_ITEMS_COST ,
		MIN_PRES_ITEMS ,
		MIN_PRES_RETAIL,
		MIN_PRES_COST,
/* Added dmgr extensions columns on 01/24/2001 by Maurice Ndansi */
                posit_indcost_reg,
	        posit_indcost_promo,
	 	posit_indcost_clrnc,
	 	posit_indcost_retn,
         	Sales_retail_5,
         	Sales_Cost_5,
         	Sales_Items_5,
         	Sales_indcost_5,
         	Sales_retail_6,
         	Sales_Cost_6,
         	Sales_Items_6,
         	Sales_indcost_6,
         	Sales_retail_7,
         	Sales_Cost_7,
         	Sales_Items_7,
         	Sales_indcost_7,
         	Sales_retail_8,
         	Sales_Cost_8,
         	Sales_Items_8,
         	Sales_indcost_8,
         	Sales_retail_9,
         	Sales_Cost_9,
         	Sales_Items_9,
         	Sales_indcost_9,
         	Sales_retail_10,
         	Sales_Cost_10,
         	Sales_Items_10,
         	Sales_indcost_10,
         	Inv_retail_1,
         	Inv_Cost_1,
         	Inv_Items_1,
         	Inv_indcost_1,
         	Inv_retail_2,
         	Inv_Cost_2,
         	Inv_Items_2,
         	Inv_indcost_2,
         	Inv_retail_3,
         	Inv_Cost_3,
         	Inv_Items_3,
         	Inv_indcost_3,
         	Inv_retail_4,
         	Inv_Cost_4,
         	Inv_Items_4,
         	Inv_indcost_4,
         	Inv_retail_5,
         	Inv_Cost_5,
         	Inv_Items_5,
         	Inv_indcost_5,
         	Inv_retail_6,
         	Inv_Cost_6,
         	Inv_Items_6,
         	Inv_indcost_6,
         	Inv_retail_7,
         	Inv_Cost_7,
         	Inv_Items_7,
         	Inv_indcost_7,
         	Inv_retail_8,
         	Inv_Cost_8,
         	Inv_Items_8,
         	Inv_indcost_8,
         	Inv_retail_9,
         	Inv_Cost_9,
         	Inv_Items_9,
         	Inv_indcost_9,
         	Inv_retail_10,
         	Inv_Cost_10,
         	Inv_Items_10,
         	Inv_indcost_10,
         	Sum_user1,
         	Sum_user2,
         	Sum_user3,
         	Sum_user4,
         	Sum_user5,
         	Avg_user1,
         	Avg_user2,
         	Avg_user3,
         	Avg_user4,
         	Avg_user5,
           inventory_indcost,
         oh_indcost,
         received_indcost,
         active_loc_flag)
    select sysdate,
      1,
      1,
      max(lv5finc.cycle),
      lv5finc.lv5loc_id,
      sum(lv5finc.cubic_meters),
      sum(lv5finc.dsp_sqmeters),
      sum(lv5finc.flr_sqmeters),
      sum(lv5finc.linear_meters),
      sum(lv5finc.used_cubic_meters),
      sum(lv5finc.used_dsp_sqmeters),
      sum(lv5finc.used_linear_meters),
      sum(lv5finc.loss_sales),
      sum(lv5finc.loss_gp),
      sum(lv5finc.proj_sales),
      sum(lv5finc.proj_gp),
      1,
      sum(lv5finc.days_in_period),
      1,
      sum(lv5finc.dpp_dollar),
      sum(lv5finc.dpp_item),
      sum(lv5finc.cost_of_invent),
      sum(lv5finc.dir_cost_of_sales),
      sum(lv5finc.indir_cost_of_sale),
      sum(lv5finc.posit_sales),
      sum(lv5finc.posit_mvmt),
      sum(lv5finc.posit_norm_mvmt),
      sum(lv5finc.count_inc_in_avg),
      sum(lv5finc.total_caps),
      sum(lv5finc.total_units),
      sum(lv5finc.total_items),
      sum(lv5finc.vat),
      sum(lv5finc.supp_total_sales),
      sum(lv5finc.supp_cost_of_sales),
      sum(lv5finc.supp_posit_mvmt),
      sum(lv5finc.supplier_norm_mvmt),
      sum(lv5finc.num_user1),
      sum(lv5finc.num_user2),
      sum(lv5finc.num_user3),
      sum(lv5finc.num_user4),
      sum(lv5finc.num_user5),
      sum(lv5finc.num_user6),
      sum(lv5finc.oh_qty),
      sum(lv5finc.oh_cost),
      sum(lv5finc.oh_retail),
      sum(lv5finc.pog_retail),
      l_periods_to_roll,
		sum(lv5finc.ALLOC_CUBIC_METERS),
		sum(lv5finc.ALLOC_DSP_SQMETERS),
		sum(lv5finc.ALLOC_FLR_SQMETERS),
		sum(lv5finc.ALLOC_LINEAR_METER),
		sum(lv5finc.POSIT_MVMT_REG ),
		sum(lv5finc.POSIT_SALES_REG),
		sum(lv5finc.POSIT_COST_REG ),
		sum(lv5finc.POSIT_MVMT_PROMO ),
		sum(lv5finc.POSIT_SALES_PROMO),
		sum(lv5finc.POSIT_COST_PROMO ),
		sum(lv5finc.POSIT_MVMT_CLRNC ),
		sum(lv5finc.POSIT_SALES_CLRNC),
		sum(lv5finc.POSIT_COST_CLRNC) ,
		sum(lv5finc.POSIT_MVMT_RETN),
		sum(lv5finc.POSIT_SALES_RETN) ,
		sum(lv5finc.POSIT_COST_RETN),
		sum(lv5finc.INVENTORY_ITEMS),
		sum(lv5finc.INVENTORY_RETAIL) ,
		sum(lv5finc.INVENTORY_COST) ,
		sum(lv5finc.RECEIVED_ITEMS) ,
		sum(lv5finc.RECEIVED_RETAIL),
		sum(lv5finc.RECEIVED_COST),
		sum(lv5finc.TOTAL_ITEMS_RETAIL) ,
		sum(lv5finc.TOTAL_ITEMS_COST) ,
		sum(lv5finc.MIN_PRES_ITEMS ),
		sum(lv5finc.MIN_PRES_RETAIL),
		sum(lv5finc.MIN_PRES_COST),
		sum(lv5finc.posit_indcost_reg),
	 	sum(lv5finc.posit_indcost_promo),
	 	sum(lv5finc.posit_indcost_clrnc),
	 	sum(lv5finc.posit_indcost_retn),
         	sum(lv5finc.Sales_retail_5),
         	sum(lv5finc.Sales_Cost_5),
         	sum(lv5finc.Sales_Items_5),
         	sum(lv5finc.Sales_Indcost_5),
         	sum(lv5finc.Sales_retail_6),
         	sum(lv5finc.Sales_Cost_6),
         	sum(lv5finc.Sales_Items_6),
         	sum(lv5finc.Sales_Indcost_6),
         	sum(lv5finc.Sales_retail_7),
         	sum(lv5finc.Sales_Cost_7),
         	sum(lv5finc.Sales_Items_7),
         	sum(lv5finc.Sales_Indcost_7),
         	sum(lv5finc.Sales_retail_8),
         	sum(lv5finc.Sales_Cost_8),
         	sum(lv5finc.Sales_Items_8),
         	sum(lv5finc.Sales_Indcost_8),
         	sum(lv5finc.Sales_retail_9),
         	sum(lv5finc.Sales_Cost_9),
         	sum(lv5finc.Sales_Items_9),
         	sum(lv5finc.Sales_Indcost_9),
         	sum(lv5finc.Sales_retail_10),
         	sum(lv5finc.Sales_Cost_10),
         	sum(lv5finc.Sales_Items_10),
         	sum(lv5finc.Sales_Indcost_10),
         	sum(lv5finc.Inv_retail_1),
         	sum(lv5finc.Inv_Cost_1),
         	sum(lv5finc.Inv_Items_1),
         	sum(lv5finc.Inv_Indcost_1),
         	sum(lv5finc.Inv_retail_2),
         	sum(lv5finc.Inv_Cost_2),
         	sum(lv5finc.Inv_Items_2),
         	sum(lv5finc.Inv_Indcost_2),
         	sum(lv5finc.Inv_retail_3),
         	sum(lv5finc.Inv_Cost_3),
         	sum(lv5finc.Inv_Items_3),
         	sum(lv5finc.Inv_Indcost_3),
         	sum(lv5finc.Inv_retail_4),
         	sum(lv5finc.Inv_Cost_4),
         	sum(lv5finc.Inv_Items_4),
         	sum(lv5finc.Inv_Indcost_4),
         	sum(lv5finc.Inv_retail_5),
         	sum(lv5finc.Inv_Cost_5),
         	sum(lv5finc.Inv_Items_5),
         	sum(lv5finc.Inv_Indcost_5),
         	sum(lv5finc.Inv_retail_6),
         	sum(lv5finc.Inv_Cost_6),
         	sum(lv5finc.Inv_Items_6),
         	sum(lv5finc.Inv_Indcost_6),
         	sum(lv5finc.Inv_retail_7),
         	sum(lv5finc.Inv_Cost_7),
         	sum(lv5finc.Inv_Items_7),
         	sum(lv5finc.Inv_Indcost_7),
         	sum(lv5finc.Inv_retail_8),
         	sum(lv5finc.Inv_Cost_8),
         	sum(lv5finc.Inv_Items_8),
         	sum(lv5finc.Inv_Indcost_8),
         	sum(lv5finc.Inv_retail_9),
         	sum(lv5finc.Inv_Cost_9),
         	sum(lv5finc.Inv_Items_9),
         	sum(lv5finc.Inv_Indcost_9),
         	sum(lv5finc.Inv_retail_10),
         	sum(lv5finc.Inv_Cost_10),
         	sum(lv5finc.Inv_Items_10),
         	sum(lv5finc.Inv_Indcost_10),
         	sum(lv5finc.Sum_user1),
         	sum(lv5finc.Sum_user2),
         	sum(lv5finc.Sum_user3),
         	sum(lv5finc.Sum_user4),
         	sum(lv5finc.Sum_user5),
         	avg(lv5finc.Avg_user1),
         	avg(lv5finc.Avg_user2),
         	avg(lv5finc.Avg_user3),
         	avg(lv5finc.Avg_user4),
         	avg(lv5finc.Avg_user5),
		   	sum(lv5finc.inventory_indcost),
            sum(lv5finc.oh_indcost),
            sum(lv5finc.received_indcost),
            sum(lv5finc.active_loc_flag)
	  from     maxdata.lv5finc , lv5loc
      where    lv5finc.lv5loc_id = lv5loc.lv5loc_id and
               lv5loc.lv4loc_id = t_lv4loc_id
      and     (lv5finc.cycle||lpad(lv5finc.period,7,0))
                  <=(l_current_cycle||lpad(l_current_period,7,0))
      and     (lv5finc.cycle||lpad(lv5finc.period,7,0))
                  >=(l_cycle_roll_from||lpad(l_period_roll_from,7,0))
      group by lv5finc.lv5loc_id ;
    insert into maxdata.lv4roll
	(last_update,
    	changed_by_batch,
    	version_id,
    	cycle,
    	lv4loc_id,
    	cubic_meters,
    	dsp_sqmeters,
    	flr_sqmeters,
    	linear_meters,
    	used_cubic_meters,
    	used_dsp_sqmeters,
    	used_linear_meters,
    	loss_sales,
	loss_gp,
    	proj_sales,
      proj_gp,
    	gm_roii,
    	days_in_period,
    	days_supply,
    	dpp_dollar,
    	dpp_item,
    	cost_of_invent,
    	dir_cost_of_sales,
    	indir_cost_of_sale,
    	posit_sales,
    	posit_mvmt,
    	posit_norm_mvmt,
    	count_inc_in_avg,
    	total_caps,
    	total_units,
    	total_items,
    	vat,
    	supp_total_sales,
    	supp_cost_of_sales,
    	supp_posit_mvmt,
    	supplier_norm_mvmt,
    	num_user1,
    	num_user2,
    	num_user3,
 	num_user4,
    	num_user5,
    	num_user6,
    	oh_qty,
    	oh_cost,
    	oh_retail,
    	pog_retail,
    	periods_rolled,
/* Added columns on 06/22/1999  Suresh */
		ALLOC_CUBIC_METERS,
		ALLOC_DSP_SQMETERS,
		ALLOC_FLR_SQMETERS,
		ALLOC_LINEAR_METER,
		POSIT_MVMT_REG ,
		POSIT_SALES_REG,
		POSIT_COST_REG ,
		POSIT_MVMT_PROMO ,
		POSIT_SALES_PROMO,
		POSIT_COST_PROMO ,
		POSIT_MVMT_CLRNC ,
		POSIT_SALES_CLRNC,
		POSIT_COST_CLRNC ,
		POSIT_MVMT_RETN,
		POSIT_SALES_RETN ,
		POSIT_COST_RETN,
		INVENTORY_ITEMS,
		INVENTORY_RETAIL ,
		INVENTORY_COST ,
		RECEIVED_ITEMS ,
		RECEIVED_RETAIL,
		RECEIVED_COST,
		TOTAL_ITEMS_RETAIL ,
		TOTAL_ITEMS_COST ,
		MIN_PRES_ITEMS ,
		MIN_PRES_RETAIL,
		MIN_PRES_COST,
/* Added dmgr extensions columns on 01/24/2001 by Maurice Ndansi */
                posit_indcost_reg,
	        posit_indcost_promo,
	 	posit_indcost_clrnc,
	 	posit_indcost_retn,
         	Sales_retail_5,
         	Sales_Cost_5,
         	Sales_Items_5,
         	Sales_indcost_5,
         	Sales_retail_6,
         	Sales_Cost_6,
         	Sales_Items_6,
         	Sales_indcost_6,
         	Sales_retail_7,
         	Sales_Cost_7,
         	Sales_Items_7,
         	Sales_indcost_7,
         	Sales_retail_8,
         	Sales_Cost_8,
         	Sales_Items_8,
         	Sales_indcost_8,
         	Sales_retail_9,
         	Sales_Cost_9,
         	Sales_Items_9,
         	Sales_indcost_9,
         	Sales_retail_10,
         	Sales_Cost_10,
         	Sales_Items_10,
         	Sales_indcost_10,
         	Inv_retail_1,
         	Inv_Cost_1,
         	Inv_Items_1,
         	Inv_indcost_1,
         	Inv_retail_2,
         	Inv_Cost_2,
         	Inv_Items_2,
         	Inv_indcost_2,
         	Inv_retail_3,
         	Inv_Cost_3,
         	Inv_Items_3,
         	Inv_indcost_3,
         	Inv_retail_4,
         	Inv_Cost_4,
         	Inv_Items_4,
         	Inv_indcost_4,
         	Inv_retail_5,
         	Inv_Cost_5,
         	Inv_Items_5,
         	Inv_indcost_5,
         	Inv_retail_6,
         	Inv_Cost_6,
         	Inv_Items_6,
         	Inv_indcost_6,
         	Inv_retail_7,
         	Inv_Cost_7,
         	Inv_Items_7,
         	Inv_indcost_7,
         	Inv_retail_8,
         	Inv_Cost_8,
         	Inv_Items_8,
         	Inv_indcost_8,
         	Inv_retail_9,
         	Inv_Cost_9,
         	Inv_Items_9,
         	Inv_indcost_9,
         	Inv_retail_10,
         	Inv_Cost_10,
         	Inv_Items_10,
         	Inv_indcost_10,
         	Sum_user1,
         	Sum_user2,
         	Sum_user3,
         	Sum_user4,
         	Sum_user5,
         	Avg_user1,
         	Avg_user2,
         	Avg_user3,
         	Avg_user4,
         	Avg_user5,
          	inventory_indcost,
            oh_indcost,
            received_indcost,
            active_loc_flag,
            store_count )
    select sysdate,
      1,
      1,
      max(lv4finc.cycle),
      lv4finc.lv4loc_id,
      sum(lv4finc.cubic_meters),
      sum(lv4finc.dsp_sqmeters),
      sum(lv4finc.flr_sqmeters),
      sum(lv4finc.linear_meters),
      sum(lv4finc.used_cubic_meters),
      sum(lv4finc.used_dsp_sqmeters),
      sum(lv4finc.used_linear_meters),
      sum(lv4finc.loss_sales),
      sum(lv4finc.loss_gp),
      sum(lv4finc.proj_sales),
      sum(lv4finc.proj_gp),
      1,
      sum(lv4finc.days_in_period),
      1,
      sum(lv4finc.dpp_dollar),
      sum(lv4finc.dpp_item),
      sum(lv4finc.cost_of_invent),
      sum(lv4finc.dir_cost_of_sales),
      sum(lv4finc.indir_cost_of_sale),
      sum(lv4finc.posit_sales),
      sum(lv4finc.posit_mvmt),
      sum(lv4finc.posit_norm_mvmt),
      sum(lv4finc.count_inc_in_avg),
      sum(lv4finc.total_caps),
      sum(lv4finc.total_units),
      sum(lv4finc.total_items),
      sum(lv4finc.vat),
      sum(lv4finc.supp_total_sales),
      sum(lv4finc.supp_cost_of_sales),
      sum(lv4finc.supp_posit_mvmt),
      sum(lv4finc.supplier_norm_mvmt),
      sum(lv4finc.num_user1),
      sum(lv4finc.num_user2),
      sum(lv4finc.num_user3),
      sum(lv4finc.num_user4),
      sum(lv4finc.num_user5),
      sum(lv4finc.num_user6),
      sum(lv4finc.oh_qty),
      sum(lv4finc.oh_cost),
      sum(lv4finc.oh_retail),
      sum(lv4finc.pog_retail),
      l_periods_to_roll,
		sum(lv4finc.ALLOC_CUBIC_METERS),
		sum(lv4finc.ALLOC_DSP_SQMETERS),
		sum(lv4finc.ALLOC_FLR_SQMETERS),
		sum(lv4finc.ALLOC_LINEAR_METER),
		sum(lv4finc.POSIT_MVMT_REG ),
		sum(lv4finc.POSIT_SALES_REG),
		sum(lv4finc.POSIT_COST_REG ),
		sum(lv4finc.POSIT_MVMT_PROMO ),
		sum(lv4finc.POSIT_SALES_PROMO),
		sum(lv4finc.POSIT_COST_PROMO ),
		sum(lv4finc.POSIT_MVMT_CLRNC ),
		sum(lv4finc.POSIT_SALES_CLRNC),
		sum(lv4finc.POSIT_COST_CLRNC) ,
		sum(lv4finc.POSIT_MVMT_RETN),
		sum(lv4finc.POSIT_SALES_RETN) ,
		sum(lv4finc.POSIT_COST_RETN),
		sum(lv4finc.INVENTORY_ITEMS),
		sum(lv4finc.INVENTORY_RETAIL) ,
		sum(lv4finc.INVENTORY_COST) ,
		sum(lv4finc.RECEIVED_ITEMS) ,
		sum(lv4finc.RECEIVED_RETAIL),
		sum(lv4finc.RECEIVED_COST),
		sum(lv4finc.TOTAL_ITEMS_RETAIL) ,
		sum(lv4finc.TOTAL_ITEMS_COST) ,
		sum(lv4finc.MIN_PRES_ITEMS ),
		sum(lv4finc.MIN_PRES_RETAIL),
		sum(lv4finc.MIN_PRES_COST),
		sum(lv4finc.posit_indcost_reg),
	 	sum(lv4finc.posit_indcost_promo),
	 	sum(lv4finc.posit_indcost_clrnc),
	 	sum(lv4finc.posit_indcost_retn),
         	sum(lv4finc.Sales_retail_5),
         	sum(lv4finc.Sales_Cost_5),
         	sum(lv4finc.Sales_Items_5),
         	sum(lv4finc.Sales_Indcost_5),
         	sum(lv4finc.Sales_retail_6),
         	sum(lv4finc.Sales_Cost_6),
         	sum(lv4finc.Sales_Items_6),
         	sum(lv4finc.Sales_Indcost_6),
         	sum(lv4finc.Sales_retail_7),
         	sum(lv4finc.Sales_Cost_7),
         	sum(lv4finc.Sales_Items_7),
         	sum(lv4finc.Sales_Indcost_7),
         	sum(lv4finc.Sales_retail_8),
         	sum(lv4finc.Sales_Cost_8),
         	sum(lv4finc.Sales_Items_8),
         	sum(lv4finc.Sales_Indcost_8),
         	sum(lv4finc.Sales_retail_9),
         	sum(lv4finc.Sales_Cost_9),
         	sum(lv4finc.Sales_Items_9),
         	sum(lv4finc.Sales_Indcost_9),
         	sum(lv4finc.Sales_retail_10),
         	sum(lv4finc.Sales_Cost_10),
         	sum(lv4finc.Sales_Items_10),
         	sum(lv4finc.Sales_Indcost_10),
         	sum(lv4finc.Inv_retail_1),
         	sum(lv4finc.Inv_Cost_1),
         	sum(lv4finc.Inv_Items_1),
         	sum(lv4finc.Inv_Indcost_1),
         	sum(lv4finc.Inv_retail_2),
         	sum(lv4finc.Inv_Cost_2),
         	sum(lv4finc.Inv_Items_2),
         	sum(lv4finc.Inv_Indcost_2),
         	sum(lv4finc.Inv_retail_3),
         	sum(lv4finc.Inv_Cost_3),
         	sum(lv4finc.Inv_Items_3),
         	sum(lv4finc.Inv_Indcost_3),
         	sum(lv4finc.Inv_retail_4),
         	sum(lv4finc.Inv_Cost_4),
         	sum(lv4finc.Inv_Items_4),
         	sum(lv4finc.Inv_Indcost_4),
         	sum(lv4finc.Inv_retail_5),
         	sum(lv4finc.Inv_Cost_5),
         	sum(lv4finc.Inv_Items_5),
         	sum(lv4finc.Inv_Indcost_5),
         	sum(lv4finc.Inv_retail_6),
         	sum(lv4finc.Inv_Cost_6),
         	sum(lv4finc.Inv_Items_6),
         	sum(lv4finc.Inv_Indcost_6),
         	sum(lv4finc.Inv_retail_7),
         	sum(lv4finc.Inv_Cost_7),
         	sum(lv4finc.Inv_Items_7),
         	sum(lv4finc.Inv_Indcost_7),
         	sum(lv4finc.Inv_retail_8),
         	sum(lv4finc.Inv_Cost_8),
         	sum(lv4finc.Inv_Items_8),
         	sum(lv4finc.Inv_Indcost_8),
         	sum(lv4finc.Inv_retail_9),
         	sum(lv4finc.Inv_Cost_9),
         	sum(lv4finc.Inv_Items_9),
         	sum(lv4finc.Inv_Indcost_9),
         	sum(lv4finc.Inv_retail_10),
         	sum(lv4finc.Inv_Cost_10),
         	sum(lv4finc.Inv_Items_10),
         	sum(lv4finc.Inv_Indcost_10),
         	sum(lv4finc.Sum_user1),
         	sum(lv4finc.Sum_user2),
         	sum(lv4finc.Sum_user3),
         	sum(lv4finc.Sum_user4),
         	sum(lv4finc.Sum_user5),
         	avg(lv4finc.Avg_user1),
         	avg(lv4finc.Avg_user2),
         	avg(lv4finc.Avg_user3),
         	avg(lv4finc.Avg_user4),
         	avg(lv4finc.Avg_user5),
			sum(lv4finc.inventory_indcost),
            sum(lv4finc.oh_indcost),
            sum(lv4finc.received_indcost),
            sum(lv4finc.active_loc_flag),
			sum(lv4finc.store_count)
      from     maxdata.lv4finc
      where    lv4finc.lv4loc_id = t_lv4loc_id
      and      (lv4finc.cycle||lpad(lv4finc.period,7,0))
               <=(l_current_cycle ||lpad(l_current_period,7,0))
      and      (lv4finc.cycle||lpad(lv4finc.period,7,0))
               >=(l_cycle_roll_from||lpad(l_period_roll_from,7,0))
      group by lv4finc.lv4loc_id ;
end;
-- end for roll calculations.
ins_corp_store_log ('p_cluster_store_l6','info','End building roll for cluster '||c1.cluster_userid,null,null,null) ;
-- update the DATE_USER7 field with the last_update
-- so that summary is not built for this until finc is loaded again
   update clustermaster
   set    date_user7 = t_last_update
   where  cluster_master_id = c1.cluster_master_id ;
else
   ins_corp_store_log  ('p_cluster_store_l6','info','Cluster '||c1.cluster_userid||' is up to date.',null,null,null) ;
END IF;
 -- end of DATE check, the first IF
<< end_current_cluster >>
   Null;
END loop;
 -- end of clustermaster foreach.
if rows_returned = 0 then
	ins_corp_store_log  ('p_cluster_store_l6','info','No cluster defined for analysis',null,null,null) ;
      ins_corp_store_log  ('p_cluster_store_l6','info','End of process',null,null,null) ;
	return;
end if ;
 end;
       ins_corp_store_log  ('p_cluster_store_l6','info','End of process',null,null,null) ;
--end if;
 -- end if for first ctr <> 0.
end;

/

  GRANT EXECUTE ON "MAXDATA"."P_CLUSTER_STORE_L6" TO "MAXAPP";
  GRANT EXECUTE ON "MAXDATA"."P_CLUSTER_STORE_L6" TO "MADMAX";
  GRANT EXECUTE ON "MAXDATA"."P_CLUSTER_STORE_L6" TO "MAXUSER";
